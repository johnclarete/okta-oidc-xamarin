<?xml version="1.0" encoding="UTF-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets" Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets')" />
	<ItemGroup>
		<XamarinProjectAnalysisTargets Include="XIA0001_DisabledLinkerRule" />
		<XamarinProjectAnalysisTargets Include="XIA0002_TestCloudAgentReleaseRule" />
		<XamarinProjectAnalysisTargets Include="XIA0003_IPADebugBuildsRule" />
		<XamarinProjectAnalysisTargets Include="XIA0004_Missing64BitSupportRule" />
		<XamarinProjectAnalysisTargets Include="XIA0005_Float32Rule" />
		<XamarinProjectAnalysisTargets Include="XIA0006_HttpClientAvoidManaged" />
		<XamarinProjectAnalysisTargets Include="XIA0007_UseLLVMRule" />
	</ItemGroup>
	<Target Name="XIA0001_DisabledLinkerRule">
		<ItemGroup Condition="'$(MtouchDebug)'=='true' And '$(MtouchLink)'=='none' And '$(_SdkIsSimulator)'=='false'">
			<XamarinProjectAnalysisResult Include="XIA0001">
				<Category>iOS</Category>
				<Problem>The linker is disabled on device for the debug mode.</Problem>
				<Fix>You should try to run your code with the linker to avoid any surprises.
To set it up, go to Project &gt; iOS Build &gt; Linker Behavior.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0002_TestCloudAgentReleaseRule" DependsOnTargets="_CompileToNative;_GenerateBundleName">
		<ItemGroup Condition="'$(MtouchDebug)'=='false' And Exists('$(AppBundleDir)/Calabash.dll')">
			<XamarinProjectAnalysisResult Include="XIA0002">
				<Category>iOS</Category>
				<Problem>App builds that initialize the Test Cloud agent will be rejected by Apple when submitted, as they use private API.</Problem>
				<Fix>Add or fix the necessary #if and defines in code.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0003_IPADebugBuildsRule">
		<ItemGroup Condition="'$(MtouchDebug)'=='true' And '$(BuildIpa)'=='true'">
			<XamarinProjectAnalysisResult Include="XIA0003">
				<Category>iOS</Category>
				<Problem>Debug configuration that uses developer signing keys should not generate an IPA as it is only needed for distribution, which now uses the Publishing Wizard.</Problem>
				<Fix>Disable IPA build in Project Options for the Debug configuration.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0004_Missing64BitSupportRule">
		<ItemGroup Condition="'$(IsWatchApp)'=='false' And '$(IsWatchExtension)'=='false' And '$(MtouchDebug)'=='false' And '$(_SdkIsSimulator)'=='false' And !$([System.String]::Copy('$(MtouchArch)').Contains('ARM64'))">
			<XamarinProjectAnalysisResult Include="XIA0004">
				<Category>iOS</Category>
				<Problem>The supported architecture for "release | device" isn't 64 bit compatible, missing ARM64. This is a problem as Apple does not accept 32 bits only iOS apps in the AppStore.</Problem>
				<Fix>Double click on your iOS project, go to Build &gt; iOS Build and change the supported architectures so it has ARM64.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0005_Float32Rule">
		<ItemGroup Condition="'$(MtouchFloat32)'=='false' And '$(_SdkIsSimulator)'=='false'">
			<XamarinProjectAnalysisResult Include="XIA0005">
				<Category>iOS</Category>
				<Problem>Not using the float32 option (--aot-options=-O=float32) leads to hefty performance cost, especially on mobile, where double precision math is measurably slower. Note that .NET uses double precision internally, even for float, so enabling this option affects precision and, possibly, compatibility.</Problem>
				<Fix>Double click on your iOS project, go to Build &gt; iOS Build and uncheck the "Perform all 32-bit float operations as 64-bit float".</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0006_HttpClientAvoidManaged">
		<ItemGroup Condition="'$(MtouchHttpClientHandler)'=='HttpClientHandler'">
			<XamarinProjectAnalysisResult Include="XIA0006">
				<Category>iOS</Category>
				<Problem>We recommend using the native HttpClient handler instead of the managed one for better performance, smaller executable size, and to easily support the newer standards.</Problem>
				<Fix>Double click on your iOS project, go to Build &gt; iOS Build and change the HttpClient implementation to either NSUrlSession (iOS 7+) or CFNetwork to support version preceding iOS 7.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Target Name="XIA0007_UseLLVMRule">
		<ItemGroup Condition="'$(MtouchDebug)'=='false' And '$(MtouchUseLlvm)'=='false' And '$(_SdkIsSimulator)'=='false'">
			<XamarinProjectAnalysisResult Include="XIA0007">
				<Category>iOS</Category>
				<Problem>For Release|iPhone configuration we recommend enabling the LLVM compiler which generates code that is faster to execute at the expense of build time.</Problem>
				<Fix>Double click on your iOS project, go to Build &gt; iOS Build and for Release|iPhone, check the LLVM optimizing compiler option.</Fix>
			</XamarinProjectAnalysisResult>
		</ItemGroup>
	</Target>
	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets" Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets')" />
</Project>
